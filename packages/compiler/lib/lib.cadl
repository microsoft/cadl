namespace Cadl;

@intrinsic
model bytes {}

@numeric
@intrinsic
model int64 {}

@numeric
@intrinsic
model int32 {}

@numeric
@intrinsic
model int16 {}

@numeric
@intrinsic
model int8 {}

@numeric
@intrinsic
model uint64 {}

@numeric
@intrinsic
model uint32 {}

@numeric
@intrinsic
model uint16 {}

@numeric
@intrinsic
model uint8 {}

@numeric
@intrinsic
model safeint {}

@numeric
@intrinsic
model float32 {}

@numeric
@intrinsic
model float64 {}

@intrinsic
model string {}

@intrinsic
model plainDate {}

@intrinsic
model plainTime {}

@intrinsic
model zonedDateTime {}

@intrinsic
model duration {}

@intrinsic
model boolean {}

@intrinsic
model null {}

// want to change this to
// model<K, V> = [K, V][];
// but templates aren't supported with model = yet.
@intrinsic
model Map<K, V> {
  @doc("the key of the Map.")
  k: K;

  @doc("the vaule of the Map.")
  v: V;
}

@doc("The template for adding optional properties.")
@withOptionalProperties
model OptionalProperties<T> {
  ...T;
}

@doc("The template for adding updateable properties.")
@withUpdateableProperties
model UpdateableProperties<T> {
  ...T;
}

@withoutDefaultValues
model OmitDefaults<T> {
  ...T;
}
