{
  "openapi": "3.0.0",
  "info": {
    "title": "(title)",
    "version": "0000-00-00"
  },
  "tags": [],
  "paths": {
    "/recursive/self-recursive": {
      "get": {
        "operationId": "RecursiveOps_getRecursive",
        "parameters": [],
        "responses": {
          "200": {
            "description": "This is an example of a model with a recursive property reference",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Recursive"
                }
              }
            }
          }
        }
      }
    },
    "/recursive/mutual-recursive": {
      "get": {
        "operationId": "RecursiveOps_getMutualRecursive",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Example of a model that reference back to itself.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parent"
                }
              }
            }
          }
        }
      }
    },
    "/recursive/mutual-template": {
      "get": {
        "operationId": "RecursiveOps_getMutualTemplateRecursive",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Example of a template referencing itself in properties",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Templated_string"
                }
              }
            }
          }
        }
      }
    },
    "/recursive/recursive-namespace": {
      "get": {
        "operationId": "RecursiveOps_getNamespaceRecursive",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Example of a template another model with the same name ut in a different namespace",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Foo.Nested.Some"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Recursive": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "recursive": {
            "$ref": "#/components/schemas/Recursive"
          },
          "recursives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Recursive"
            },
            "x-cadl-name": "Recursive[]"
          }
        },
        "description": "This is an example of a model with a recursive property reference",
        "required": [
          "name",
          "recursive",
          "recursives"
        ]
      },
      "Parent": {
        "type": "object",
        "properties": {
          "child": {
            "$ref": "#/components/schemas/Child"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Child"
            },
            "x-cadl-name": "Child[]"
          }
        },
        "description": "Example of a model that reference back to itself.",
        "required": [
          "child",
          "children"
        ]
      },
      "Templated_string": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/Templated_string"
          },
          "parents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Templated_string"
            },
            "x-cadl-name": "Templated_Cadl.string[]"
          }
        },
        "description": "Example of a template referencing itself in properties",
        "required": [
          "value",
          "parents"
        ]
      },
      "Foo.Nested.Some": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/Foo.Nested.Some"
          },
          "related": {
            "$ref": "#/components/schemas/Bar.Nested.Some"
          }
        },
        "description": "Example of a template another model with the same name ut in a different namespace",
        "required": [
          "name",
          "related"
        ]
      },
      "Child": {
        "type": "object",
        "properties": {
          "parent": {
            "$ref": "#/components/schemas/Parent"
          },
          "parents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Parent"
            },
            "x-cadl-name": "Parent[]"
          }
        },
        "description": "Example of a model that reference back to itself.",
        "required": [
          "parent",
          "parents"
        ]
      },
      "Bar.Nested.Some": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/Bar.Nested.Some"
          },
          "related": {
            "$ref": "#/components/schemas/Foo.Nested.Some"
          }
        },
        "required": [
          "name",
          "related"
        ]
      }
    }
  }
}
