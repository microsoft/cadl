import "@cadl-lang/rest";

@doc("Error")
model Error {
  status: int32;
  message: string;
}

model Basic {
  @doc("Basic Id")
  id: int32 | null;

  @doc(
    "Name property with a very long description that does not fit on a single line and a line break."
  )
  name: string;
  color: CMYKColors;
}

enum CMYKColors {
  cyan,
  Magenta,
  YELLOW,
  blacK,
}

model Pet {
  id: int32;
  name: string;
}

model IntWrapper {
  field1: int32;
  field2: int32;
}

model LongWrapper {
  field1: int64;
  field2: int64;
}

model FloatWrapper {
  field1: float32;
  field2: float32;
}

model DoubleWrapper {
  field1: float64;
  field_56_zeros_after_the_dot_and_negative_zero_before_dot_and_this_is_a_long_field_name_on_purpose: float64;
}

model BooleanWrapper {
  field_true: boolean;
  field_false: boolean;
}

model StringWrapper {
  field: string;
  empty: string;
  null: string | null;
}

model DateWrapper {
  field: plainDate;
  leap: plainDate;
}

model DateTimeWrapper {
  field: zonedDateTime;
  now: zonedDateTime;
}

// model DateTimeRfc1123Wrapper {
//   field: zonedDateTime;
//   now: zonedDateTime;
// }

// model DurationWrapper {
//   field: duration;
// }

model ByteWrapper {
  field: bytes;
}

model ArrayWrapper {
  field: string[];
}

model DictionaryWrapper {
  field: Map<string, string>;
}

model ReadonlyObj {
  @visibility("read") id: int32;
  @visibility("read") size: int32;
}

@doc("AutoRest Complex Body Test Service")
@resource("/complex")
namespace Complex {
  @doc("Get complex type {id: 2, name: 'abc', color: 'YELLOW'}")
  @get("/basic/valid")
  op getValid(): OkResponse<Basic> | Error;

  @doc("Please put {id: 2, name: 'abc', color: 'Magenta'}")
  @put("/basic/valid")
  op putValid(@body value: Basic): OkResponse<{}> | Error;
}
